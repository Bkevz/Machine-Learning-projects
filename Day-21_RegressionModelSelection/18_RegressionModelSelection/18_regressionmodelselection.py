# -*- coding: utf-8 -*-
"""18_RegressionModelSelection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zITGkZx0V2IqPz7bp5AQY5wuF9XCfsgv

# Regression Model Selection

## Importing the basic libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""### Load Dataset from Local Directory"""

from google.colab import files
uploaded = files.upload()

"""## Importing the dataset"""

dataset = pd.read_csv('dataset.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values
ysvm = y.reshape(len(y),1)

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)
X_trainsvm, X_testsvm, y_trainsvm, y_testsvm = train_test_split(X, ysvm, test_size = 0.2, random_state = 0)

"""### Importing Machine Learning Algorithms"""

from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.ensemble import RandomForestRegressor
from sklearn.tree import DecisionTreeRegressor
from sklearn.svm import SVR

"""## Initializing different Regression algorithms"""

from sklearn.preprocessing import StandardScaler

modelLR  = LinearRegression()

poly_reg = PolynomialFeatures(degree = 4)
X_poly   = poly_reg.fit_transform(X_train)
modelPLR = LinearRegression()

modelRFR = RandomForestRegressor(n_estimators = 10, random_state = 0)

modelDTR = DecisionTreeRegressor(random_state = 0)

modelSVR = SVR(kernel = 'rbf')

sc_X     = StandardScaler()
sc_y     = StandardScaler()
X_trainsvm  = sc_X.fit_transform(X_trainsvm)
y_trainsvm  = sc_y.fit_transform(y_trainsvm)

"""### Training Regression algorithm"""

modelLR.fit(X_train, y_train)
modelPLR.fit(X_poly, y_train)
modelRFR.fit(X_train, y_train)
modelDTR.fit(X_train, y_train)
modelSVR.fit(X_trainsvm, y_trainsvm)

"""## Predicting the Test set for Validation"""

modelLRy_pred  = modelLR.predict(X_test)
modelPLRy_pred = modelPLR.predict(poly_reg.transform(X_test))
modelRFRy_pred = modelRFR.predict(X_test)
modelDTRy_pred = modelDTR.predict(X_test)
modelSVRy_pred = sc_y.inverse_transform(modelSVR.predict(sc_X.transform(X_test)))

"""## Evaluating the Model Performance"""

from sklearn.metrics import r2_score
print("Linear Regression Accuracy: {}".format(r2_score(y_test, modelLRy_pred)))
print("Polynomial Regression Accuracy: {}".format(r2_score(y_test, modelPLRy_pred)))
print("Random Forest Regression Accuracy: {}".format(r2_score(y_test, modelRFRy_pred)))
print("Decision Treee Regression Accuracy: {}".format(r2_score(y_test, modelDTRy_pred)))
print("Support Vector Regression Accuracy: {}".format(r2_score(y_test, modelSVRy_pred)))